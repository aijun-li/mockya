// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/tools/client"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:123456789@localhost:3456/mockya"
}

model User {
  id   String @id
  name String @unique
}

model Collection {
  id   String @id
  name String

  rules Rule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rule {
  id      Int     @id
  name    String
  enabled Boolean @default(true)
  path    String  @default("")

  matchers   Matcher[]
  mocks      Mock[]
  conditions RuleCondition[]

  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RuleCondition {
  id    Int    @id
  key   String @default("")
  value String @default("")

  ruleId Int
  rule   Rule @relation(fields: [ruleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Matcher {
  id      Int     @id
  default Boolean @default(false)
  delay   Int     @default(0)

  conditions MatcherCondition[]

  ruleId Int
  rule   Rule @relation(fields: [ruleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  mockId Int
  mock   Mock @relation(fields: [mockId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MatcherCondition {
  id    Int    @id
  key   String @default("")
  value String @default("")

  matcherId Int
  matcher   Matcher @relation(fields: [matcherId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Mock {
  id      Int          @id
  name    String
  default Boolean      @default(false)
  headers MockHeader[]
  body    String       @default("")

  matchers Matcher[]

  ruleId Int
  rule   Rule @relation(fields: [ruleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MockHeader {
  id      Int     @id
  key     String
  value   String  @default("")
  enabled Boolean @default(true)

  mockId Int
  mock   Mock @relation(fields: [mockId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IntStat {
  key   String @id
  value Int
}
